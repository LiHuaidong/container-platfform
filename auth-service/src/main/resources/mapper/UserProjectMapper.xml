<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hdli.auth.mapper.UserProjectMapper">
  <resultMap id="BaseResultMap" type="hdli.auth.model.po.UserProjectPO">
    <!--@mbg.generated-->
    <!--@Table user_project-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, project_id, role_id, created_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user_project
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from user_project
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="hdli.auth.model.po.UserProjectPO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user_project (user_id, project_id, role_id, created_at
      )
    values (#{userId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{createdAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="hdli.auth.model.po.UserProjectPO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user_project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
    </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hdli.auth.model.po.UserProjectPO">
    <!--@mbg.generated-->
    update user_project
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="hdli.auth.model.po.UserProjectPO">
    <!--@mbg.generated-->
    update user_project
    set user_id = #{userId,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>